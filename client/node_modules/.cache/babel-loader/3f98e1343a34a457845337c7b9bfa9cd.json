{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laiwe\\\\taobao2\\\\client\\\\src\\\\components\\\\cart-icon\\\\cart-icon.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";\nimport './cart-icon.styles.scss';\nimport { selectCartItemsCount } from '../../redux/cart/cart.selectors';\n\nconst CartIcon = ({\n  toggleCartHidden,\n  itemCount\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-icon\",\n  onClick: toggleCartHidden,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ShoppingIcon, {\n  className: \"shopping-icon\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"item-count\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, itemCount)); //dispatch action object - toggleCartHidden() to the cart reducer \n\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nconst mapStateToProps = state => createStructuredSelector({\n  //using reduce to accumulate the quantity number, starting from 0\n  // This is a selector, pulling of a slice of the state, and reducing it to get a new output \n  // Bad performance, the selector will always be called and processed even if unrelated state is updated. \n  // Solution is to cache, memoize data so that if the data is the same, there is no need to re compute\n  // React library re-selector solves this\n  itemCount: selectCartItemsCount\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);","map":{"version":3,"sources":["C:/Users/laiwe/taobao2/client/src/components/cart-icon/cart-icon.component.jsx"],"names":["React","connect","createStructuredSelector","toggleCartHidden","selectCartItemsCount","CartIcon","itemCount","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,gBAAT,QAAiC,+BAAjC;;AAIA,OAAO,yBAAP;AACA,SAASC,oBAAT,QAAqC,iCAArC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEF,EAAAA,gBAAF;AAAoBG,EAAAA;AAApB,CAAD,kBACb;AAAK,EAAA,SAAS,EAAC,WAAf;AAA2B,EAAA,OAAO,EAAEH,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,eAEI;AAAM,EAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA8BG,SAA9B,CAFJ,CADJ,C,CAOA;;;AACA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCL,EAAAA,gBAAgB,EAAE,MAAMK,QAAQ,CAACL,gBAAgB,EAAjB;AADI,CAAL,CAAnC;;AAIA,MAAMM,eAAe,GAAIC,KAAD,IAAWR,wBAAwB,CAAC;AACxD;AACA;AACA;AACA;AACA;AACAI,EAAAA,SAAS,EAAEF;AAN6C,CAAD,CAA3D;;AASA,eAAeH,OAAO,CAACQ,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CF,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\r\n\r\nimport { ReactComponent  as ShoppingIcon} from '../../assets/shopping-bag.svg';\r\n\r\nimport './cart-icon.styles.scss';\r\nimport { selectCartItemsCount } from '../../redux/cart/cart.selectors';\r\n\r\nconst CartIcon = ({ toggleCartHidden, itemCount }) => (\r\n    <div className=\"cart-icon\" onClick={toggleCartHidden}>\r\n        <ShoppingIcon className=\"shopping-icon\"/>\r\n        <span className=\"item-count\">{itemCount}</span>\r\n    </div>\r\n)\r\n\r\n//dispatch action object - toggleCartHidden() to the cart reducer \r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleCartHidden: () => dispatch(toggleCartHidden())\r\n})\r\n\r\nconst mapStateToProps = (state) => createStructuredSelector({\r\n    //using reduce to accumulate the quantity number, starting from 0\r\n    // This is a selector, pulling of a slice of the state, and reducing it to get a new output \r\n    // Bad performance, the selector will always be called and processed even if unrelated state is updated. \r\n    // Solution is to cache, memoize data so that if the data is the same, there is no need to re compute\r\n    // React library re-selector solves this\r\n    itemCount: selectCartItemsCount\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);"]},"metadata":{},"sourceType":"module"}