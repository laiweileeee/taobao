{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist'; //getting the localStorage object as default storage, not session storage\n\nimport storage from 'redux-persist/lib/storage';\nimport userReducer from './user/user.reducer';\nimport cartReducer from './cart/cart.reducer';\nimport directoryReducer from './directory/directory.reducer';\nimport shopReducer from './shop/shop.reducer';\nconst persistConfig = {\n  // key: from where in reducer object do you want store everything  \n  key: 'root',\n  storage,\n  //array of string names of reducers that we want to store\n  whitelist: ['cart']\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer\n}); //modify rootReducer with the persistConfig on top of it\n\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["C:/Users/laiwe/taobao2/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","shopReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,aAAa,GAAG;AAClB;AACAC,EAAAA,GAAG,EAAE,MAFa;AAGlBN,EAAAA,OAHkB;AAIlB;AACAO,EAAAA,SAAS,EAAE,CAAC,MAAD;AALO,CAAtB;AAQA,MAAMC,WAAW,GAAGV,eAAe,CAAC;AAChCW,EAAAA,IAAI,EAAER,WAD0B;AAEhCS,EAAAA,IAAI,EAAER,WAF0B;AAGhCS,EAAAA,SAAS,EAAER;AAHqB,CAAD,CAAnC,C,CAMA;;AACA,eAAeJ,cAAc,CAACM,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\n//getting the localStorage object as default storage, not session storage\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport userReducer from './user/user.reducer';\r\nimport cartReducer from './cart/cart.reducer';\r\nimport directoryReducer from './directory/directory.reducer';\r\nimport shopReducer from './shop/shop.reducer';\r\n\r\nconst persistConfig = {\r\n    // key: from where in reducer object do you want store everything  \r\n    key: 'root',\r\n    storage,\r\n    //array of string names of reducers that we want to store\r\n    whitelist: ['cart'] \r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    cart: cartReducer,\r\n    directory: directoryReducer\r\n})\r\n\r\n//modify rootReducer with the persistConfig on top of it\r\nexport default persistReducer(persistConfig, rootReducer);"]},"metadata":{},"sourceType":"module"}