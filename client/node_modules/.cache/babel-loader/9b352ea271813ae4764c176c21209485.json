{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laiwe\\\\taobao2\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.util';\nimport './sign-in.styles.scss';\n\nconst SignIn = () => {\n  //using hooks for state\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  }); //destructuring from userCredentials state (hooks)\n\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      setCredentials({\n        email: '',\n        password: ''\n      });\n    } catch (error) {\n      alert(error.message);\n    }\n  }; // One function for both email and password handling\n\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target; // short hand for if - else \n\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Sign In \"), /*#__PURE__*/React.createElement(CustomButton, {\n    isGoogleSignIn: true,\n    onClick: signInWithGoogle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Google\"))));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/laiwe/taobao2/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","auth","signInWithGoogle","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","signInWithEmailAndPassword","error","alert","message","handleChange","value","name","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,8BAAvC;AAEA,OAAO,uBAAP;;AAGA,MAAMC,MAAM,GAAG,MAAM;AACjB;AACA,QAAM,CAACC,eAAD,EAAkBC,cAAlB,IAAoCP,QAAQ,CAAC;AAAEQ,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAlD,CAFiB,CAIjB;;AACA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,eAA5B;;AAEA,QAAMI,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACA,YAAMT,IAAI,CAACU,0BAAL,CAAgCL,KAAhC,EAAuCC,QAAvC,CAAN;AACAF,MAAAA,cAAc,CAAC;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAD,CAAd;AACH,KAHD,CAGE,OAAOK,KAAP,EAAc;AACZC,MAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH;AACJ,GARD,CAPiB,CAiBjB;;;AACA,QAAMC,YAAY,GAAIN,KAAD,IAAW;AAC5B,UAAM;AAAEO,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBR,KAAK,CAACS,MAA9B,CAD4B,CAE5B;;AACAb,IAAAA,cAAc,CAAC,EAAE,GAAGD,eAAL;AAAsB,OAACa,IAAD,GAAQD;AAA9B,KAAD,CAAd;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,eAII;AAAM,IAAA,QAAQ,EAAER,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAEF,KAHX;AAII,IAAA,YAAY,EAAES,YAJlB;AAKI,IAAA,KAAK,EAAC,OALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAER,QAHX;AAII,IAAA,YAAY,EAAEQ,YAJlB;AAKI,IAAA,KAAK,EAAC,UALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAeI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,YAAD;AAAc,IAAA,cAAc,MAA5B;AAA6B,IAAA,OAAO,EAAEb,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAfJ,CAJJ,CADJ;AA4BH,CApDD;;AAsDA,eAAeC,MAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { auth, signInWithGoogle } from '../../firebase/firebase.util';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\n\r\nconst SignIn = () => {\r\n    //using hooks for state\r\n    const [userCredentials, setCredentials] = useState({ email: '', password: '' })\r\n\r\n    //destructuring from userCredentials state (hooks)\r\n    const { email, password } = userCredentials;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            setCredentials({ email: '', password: '' })\r\n        } catch (error) {\r\n            alert(error.message);\r\n        }\r\n    }\r\n\r\n    // One function for both email and password handling\r\n    const handleChange = (event) => {\r\n        const { value, name } = event.target;\r\n        // short hand for if - else \r\n        setCredentials({ ...userCredentials, [name]: value });\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in\">\r\n            <h2 className=\"title\">I already have an account</h2>\r\n            <span className=\"title\">Sign in with your email and password</span>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    handleChange={handleChange}\r\n                    label=\"Email\"\r\n                    required />\r\n                <FormInput\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    handleChange={handleChange}\r\n                    label=\"Password\"\r\n                    required />\r\n                <div className=\"buttons\">\r\n                    <CustomButton type=\"submit\">Sign In </CustomButton>\r\n                    <CustomButton isGoogleSignIn onClick={signInWithGoogle}>Google</CustomButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}